name: Deploy Static Page

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Generate static index page
      run: |
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-CN">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Redis Stream Queue - 基于 Redis Stream 的高性能轻量级消息队列</title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    line-height: 1.6;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    min-height: 100vh;
                }
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 2rem;
                }
                .hero {
                    text-align: center;
                    padding: 4rem 0;
                }
                .hero h1 {
                    font-size: 3rem;
                    margin-bottom: 1rem;
                    font-weight: 800;
                }
                .hero p {
                    font-size: 1.5rem;
                    margin-bottom: 2rem;
                    opacity: 0.9;
                }
                .actions {
                    display: flex;
                    gap: 1rem;
                    justify-content: center;
                    flex-wrap: wrap;
                    margin-bottom: 4rem;
                }
                .btn {
                    display: inline-block;
                    padding: 12px 24px;
                    background: white;
                    color: #667eea;
                    text-decoration: none;
                    border-radius: 8px;
                    font-weight: 600;
                    transition: all 0.3s ease;
                }
                .btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
                }
                .btn-secondary {
                    background: rgba(255,255,255,0.2);
                    color: white;
                    border: 2px solid rgba(255,255,255,0.3);
                }
                .features {
                    background: rgba(255,255,255,0.1);
                    border-radius: 16px;
                    padding: 3rem;
                    margin-bottom: 2rem;
                }
                .features h2 {
                    text-align: center;
                    margin-bottom: 2rem;
                    font-size: 2.5rem;
                }
                .features-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 1.5rem;
                }
                .feature-card {
                    background: rgba(255,255,255,0.1);
                    padding: 1.5rem;
                    border-radius: 12px;
                    backdrop-filter: blur(10px);
                }
                .install {
                    background: rgba(255,255,255,0.1);
                    border-radius: 16px;
                    padding: 2rem;
                    margin-bottom: 2rem;
                }
                .install h3 {
                    margin-bottom: 1rem;
                }
                .install code {
                    background: rgba(0,0,0,0.2);
                    padding: 1rem;
                    border-radius: 8px;
                    display: block;
                    font-family: 'Monaco', 'Menlo', monospace;
                }
                .footer {
                    text-align: center;
                    padding: 2rem;
                    opacity: 0.8;
                }
                .status {
                    background: rgba(16, 185, 129, 0.2);
                    border: 2px solid rgba(16, 185, 129, 0.5);
                    border-radius: 12px;
                    padding: 1.5rem;
                    margin-bottom: 2rem;
                    text-align: center;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="hero">
                    <h1>🚀 Redis Stream Queue</h1>
                    <p>基于 Redis Stream 的高性能轻量级消息队列</p>
                    <div class="actions">
                        <a href="https://github.com/Tinywan/redis-stream" class="btn">📖 查看 GitHub</a>
                        <a href="https://packagist.org/packages/tinywan/redis-stream" class="btn btn-secondary">📦 安装包</a>
                    </div>
                </div>

                <div class="status">
                    <h2>🎉 GitHub Pages 自动部署测试</h2>
                    <p>这是一个自动生成的静态页面，用于测试 GitHub Pages 部署功能。</p>
                    <p>最后更新时间：<script>document.write(new Date().toLocaleString('zh-CN'));</script></p>
                </div>

                <div class="features">
                    <h2>✨ 核心特性</h2>
                    <div class="features-grid">
                        <div class="feature-card">
                            <h3>⚡ 超高性能</h3>
                            <p>基于 Redis 5.0+ Stream 数据结构，性能卓越</p>
                        </div>
                        <div class="feature-card">
                            <h3>🔄 多生产者/消费者</h3>
                            <p>支持多个生产者和消费者同时工作</p>
                        </div>
                        <div class="feature-card">
                            <h3>💾 消息持久化</h3>
                            <p>可靠的消息持久化存储，确保数据不丢失</p>
                        </div>
                        <div class="feature-card">
                            <h3>✅ ACK 确认机制</h3>
                            <p>完善的消息确认机制，保证消息可靠投递</p>
                        </div>
                        <div class="feature-card">
                            <h3>🔄 智能重试</h3>
                            <p>内置消息重试机制，自动处理失败消息</p>
                        </div>
                        <div class="feature-card">
                            <h3>⏰ 延时消息</h3>
                            <p>支持延时消息和定时消息，灵活的时间控制</p>
                        </div>
                    </div>
                </div>

                <div class="install">
                    <h3>🚀 快速安装</h3>
                    <code>composer require tinywan/redis-stream</code>
                </div>

                <div class="footer">
                    <p>📄 完整文档请访问：<a href="https://github.com/Tinywan/redis-stream" style="color: white;">GitHub 仓库</a></p>
                    <p>🤖 此页面由 GitHub Actions 自动生成</p>
                </div>
            </div>
        </body>
        </html>
        EOF
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: .
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4